/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import Functions.Utils.Screen;
import java.awt.Point;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author dxrry
 */
public class Loading extends javax.swing.JFrame {
    
    private Integer userAuthLogin = 0;
    
    private Timer timer;
    private int loadingPercentage;
    
    private Map<Integer, Integer> checkoutList = new HashMap<>();
    
    public final Integer getUserId() {
        return userAuthLogin;
    }

    public void setUserId(Integer userAuthLogin) {
        this.userAuthLogin = userAuthLogin;
    }
    
    public final Map<Integer, Integer> getCheckoutList() {
        return checkoutList;
    }

    public void setCheckoutList(Map<Integer, Integer> checkoutList) {
        this.checkoutList = checkoutList;
    }

    /**
     * Creates new form NewJFrame
     * @param redirectLocation
     * @param addParameter
     */
    public Loading(String redirectLocation, Object addParameter) {
        initComponents();
        
        loadingPercentage = 0;
        
        timer = new Timer(100, e -> {
            loadingPercentage += 10;
            progressLoading.setValue(loadingPercentage);
            
            if (loadingPercentage >= 100) {
                timer.stop();
                
                // Panggil method untuk menampilkan panel yang sesuai berdasarkan redirectLocation
                showSelectedPanel(redirectLocation, addParameter);
            }
        });
        
        timer.start();
    }
    
    private void showSelectedPanel(String redirectLocation, Object addParameter) {
        JFrame selectedPanel;
        
        // Logika untuk menentukan panel yang akan ditampilkan berdasarkan redirectLocation
        // ...
            
            selectedPanel = redirectLocation.equals("Login") ? new Login() :
                    redirectLocation.equals("Register") ? new Register() :
                    redirectLocation.equals("PaymentGateway") ? new PaymentGateway(getUserId(), getCheckoutList()) :
                    redirectLocation.equals("Payment") ? new Payment(getUserId(), getCheckoutList(), addParameter.toString()) :
                    redirectLocation.equals("History") ? new History(getUserId()) :
                    redirectLocation.equals("DetailOrder") ? new DetailOrder(getUserId(), Integer.valueOf(addParameter.toString())) :
                    getUserId() != 0 ? new Dashboard(getUserId()) : new Dashboard(0);
        
        selectedPanel.setLocationRelativeTo(null);
        selectedPanel.setVisible(true);
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressLoading = new Components.ProgressBarCustom();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        progressLoading.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        getContentPane().add(progressLoading, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 640, 1170, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BackgroundLoading.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Point centerPoint = Screen.getCenterPoint();
            Loading Loading = new Loading("Loading", false);
            Loading.setLocation(centerPoint.x - Loading.getWidth() / 2, centerPoint.y - Loading.getHeight() / 2);
            Loading.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private Components.ProgressBarCustom progressLoading;
    // End of variables declaration//GEN-END:variables
}
